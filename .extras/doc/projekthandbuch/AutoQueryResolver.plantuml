' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  class "@Resolver" as Resolver
  hide Resolver circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Query" as Query
  hide Query circle

  class "@Args" as Args
  hide Args circle

  Resolver .left[hidden].> Promise
}

package auto {
  package entity {
    class Auto <<entity>>
  }

  package service {
    class AutoReadService << control >>
  }

  package graphql #DDDDDD {
    class "type AutoDTO = Omit<Auto, 'bilder' | 'aktualisiert' | 'erzeugt'" as AutoDTO
    hide AutoDTO circle

    interface IdInput {
        id: number
    }

    class AutoQueryResolver << control >> << @Resolver() >> << @UseInterceptors() >> {
      + @Query() async auto(@Args() id: IdInput): Promise<AutoDTO>
      + @Query() async autos(@Args() titel: string | undefined): Promise<AutoDTO[]>
    }

    AutoQueryResolver o-up-> "1" AutoReadService : service
    AutoQueryResolver ..> AutoDTO
    AutoQueryResolver ..> IdInput
    AutoDTO ..> Auto
    AutoQueryResolver ..> Resolver

    AutoQueryResolver ..> Promise

    AutoDTO .[hidden].> Auto
    Auto .[hidden].> Promise
    AutoReadService .[hidden].> Promise
    Auto .[hidden].> Resolver
    AutoReadService .[hidden].> Resolver
  }
}

hide empty members

footer Niklas Lisker

@enduml
